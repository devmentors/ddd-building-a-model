// <auto-generated />
using System;
using DDD.BuildingBlocks.V10.SpecificationUsage.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DDD.BuildingBlocks.V10.SpecificationUsage.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20230613111602_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Cart.CartProduct", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CheckoutCartId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("CartId", "ProductId");

                    b.HasIndex("CheckoutCartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Cart.CheckoutCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Payment")
                        .HasColumnType("text");

                    b.Property<string>("Shipment")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Checkouts");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Order.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Payment")
                        .HasColumnType("text");

                    b.Property<DateTime>("PlaceDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Shipment")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Order.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("OrderLineNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("SKU")
                        .HasColumnType("text");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Shared.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("LimitedAvailability")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("SKU")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Cart.CartProduct", b =>
                {
                    b.HasOne("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Cart.CheckoutCart", null)
                        .WithMany("Products")
                        .HasForeignKey("CheckoutCartId");

                    b.HasOne("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Shared.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Order.OrderLine", b =>
                {
                    b.HasOne("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Order.Order", null)
                        .WithMany("Lines")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Cart.CheckoutCart", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DDD.BuildingBlocks.V10.SpecificationUsage.Core.Order.Order", b =>
                {
                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
